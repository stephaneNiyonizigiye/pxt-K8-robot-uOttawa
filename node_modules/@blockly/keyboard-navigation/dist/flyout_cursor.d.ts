/**
 * @license
 * Copyright 2021 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * @fileoverview The class representing a cursor used to navigate the flyout.
 * @author aschmiedt@google.com (Abby Schmiedt)
 */
import * as Blockly from 'blockly/core';
/**
 * Class for a flyout cursor.
 * This controls how a user navigates blocks in the flyout.
 * This cursor only allows a user to go to the previous or next stack.
 */
export declare class FlyoutCursor extends Blockly.LineCursor {
    private readonly flyout;
    /**
     * The constructor for the FlyoutCursor.
     *
     * @param flyout The flyout this cursor is for.
     */
    constructor(flyout: Blockly.IFlyout);
    /**
     * Moves the cursor to the next stack of blocks in the flyout.
     *
     * @returns The next element, or null if the current node is
     *     not set or there is no next value.
     */
    next(): Blockly.IFocusableNode | null;
    /**
     * Moves the cursor to the previous stack of blocks in the flyout.
     *
     * @returns The previous element, or null if the current
     *     node is not set or there is no previous value.
     */
    prev(): Blockly.IFocusableNode | null;
    setCurNode(node: Blockly.IFocusableNode): void;
}
export declare const registrationType: Blockly.registry.Type<Blockly.LineCursor>;
export declare const registrationName = "FlyoutCursor";
export declare const pluginInfo: {
    [x: string]: string;
};
//# sourceMappingURL=flyout_cursor.d.ts.map